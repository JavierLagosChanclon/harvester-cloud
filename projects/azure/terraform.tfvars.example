variable "os_disk_size" {
  description = "Specifies the size of the disk attached to each node, in GB. Default is '50'."
  type        = number
  default     = 50
}

variable "data_disk_type" {
  description = "Specifies the type of the disk attached to each node (e.g., 'Premium_LRS', 'Standard_LRS'). Default is 'Premium_LRS'."
  type        = string
  default     = "Premium_LRS"
}

variable "data_disk_size" {
  description = "Specifies the size of the additional data disk for each VM instance, in GB. Default is '350'."
  type        = number
  default     = 350
}

variable "startup_script" {
  description = "Specifies a custom startup script to run when the VMs start. Default is 'null'."
  type        = string
  default     = null
}

variable "harvester_version" {
  description = "Specifies the Harvester version. Default is 'v1.4.1'."
  type        = string
  default     = "v1.4.1"
  validation {
    condition     = can(regex("^v[0-9]+\\.[0-9]+\\.[0-9]+$", var.harvester_version))
    error_message = "The Harvester version must start with 'v' followed by a valid version number (e.g., v1.4.1)."
  }
}

variable "harvester_node_count" {
  description = "Specifies the number of Harvester nodes to create (1 or 3). Default is '1'."
  type        = number
  default     = 1
  validation {
    condition     = contains([1, 3], var.harvester_node_count)
    error_message = "The number of data disks must be 1 or 3."
  }
}

variable "harvester_first_node_token" {
  description = "Specifies the token used to join additional nodes to the Harvester cluster (HA setup). Default is 'SecretToken.123'."
  type        = string
  default     = "SecretToken.123"
}

variable "harvester_password" {
  description = "Specifies the password used to access the Harvester nodes. Default is 'SecretPassword.123'."
  type        = string
  default     = "SecretPassword.123"
}

variable "harvester_cluster_size" {
  description = "Specifies the size of the Harvester cluster. Allowed values are 'small' (8 CPUs, 32 GB RAM) and 'medium' (16 CPUs, 64 GB RAM). Default is 'small'."
  type        = string
  default     = "small"

  validation {
    condition     = contains(["small", "medium"], var.harvester_cluster_size)
    error_message = "Invalid value for harvester_cluster_size. Allowed values are 'small' or 'medium'."
  }
}

variable "rancher_api_url" {
  description = "Specifies the Rancher API endpoint used to manage the Harvester cluster. Default is empty."
  type        = string
  default     = ""
}

variable "rancher_access_key" {
  description = "Specifies the Rancher access key for authentication. Default is empty."
  type        = string
  default     = ""
  sensitive   = true
}

variable "rancher_secret_key" {
  description = "Specifies the Rancher secret key for authentication. Default is empty."
  type        = string
  default     = ""
  sensitive   = true
}

variable "rancher_insecure" {
  description = "Specifies whether to allow insecure connections to the Rancher API. Default is 'false'."
  type        = bool
  default     = false
}

## -- Specifies the prefix added to the names of all resources.
prefix = "azure-tf"

## -- Specifies the Azure Subscription ID that will contain all created resources.
<subscription_id = "azure-tf"

## -- Specifies the Azure region used for all resources.
region = "westeurope"

## -- Specifies whether a new SSH key pair needs to be created for the instances.
create_ssh_key_pair = true

## -- Specifies the full path where the pre-generated SSH PRIVATE key is located (not generated by Terraform).
ssh_private_key_path = null

## -- Specifies the full path where the pre-generated SSH PUBLIC key is located (not generated by Terraform).
ssh_public_key_path = null

## -- Specifies the range of private IPs available for the Azure Subnet.
ip_cidr_range = "10.10.0.0/24"

## -- Specifies whether a Virtual Network should be created for the instances.
create_vnet = "true"

## -- Specifies whether the instances should be Spot (preemptible) VMs.
spot_instance = true

## -- Specifies the type of the disk attached to each node (e.g., 'Premium_LRS', 'Standard_LRS').
os_disk_type = "Premium_LRS"

## -- Specifies the size of the disk attached to each node, in GB.
os_disk_size = 50

## -- Specifies the type of the disk attached to each node (e.g., 'Premium_LRS', 'Standard_LRS').
data_disk_type = "Premium_LRS"

## -- Specifies the size of the additional data disk for each VM instance, in GB.
data_disk_size = 350

## -- Specifies a custom startup script to run when the VMs start.
startup_script = null

## -- Specifies the Harvester version.
harvester_version = "v1.4.1"

## -- Specifies the number of Harvester nodes to create (1 or 3).
harvester_node_count = 1

## -- Specifies the token used to join additional nodes to the Harvester cluster (HA setup).
harvester_first_node_token = "SecretToken.123"

## -- Specifies the password used to access the Harvester nodes.
harvester_password = "SecretPassword.123"

## -- Specifies the size of the Harvester cluster. Allowed values are 'small' (8 CPUs, 32 GB RAM) and 'medium' (16 CPUs, 64 GB RAM).
harvester_cluster_size = "small"

## -- Specifies the Rancher API endpoint used to manage the Harvester cluster.
rancher_api_url = ""

## -- Specifies the Rancher access key for authentication.
rancher_access_key = ""

## -- Specifies the Rancher secret key for authentication.
rancher_secret_key = ""

## -- Specifies whether to allow insecure connections to the Rancher API.
rancher_insecure = false
